import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { PageProps } from "@/login/types";
import { RectangleEllipsis } from "lucide-react";
import { useState } from "react";

const OtpFormPage = (props: PageProps<"login-otp.ftl">) => {
    const { kcContext, i18n, Template } = props;
    const { url, messagesPerField } = kcContext;
    const { msg } = i18n;
    const [loading, setLoading] = useState(false);

    return (
        <Template kcContext={kcContext} i18n={i18n}>
            <div className="w-full min-h-screen grid grid-cols-1">
                <div className="col-span-1 md:col-span-1 px-8 py-12 rounded-[20px] flex flex-col items-center justify-center">
                    <div className="w-10 h-10 bg-[#f4f7f9] flex justify-center items-center rounded-lg mb-4">
                        <RectangleEllipsis />
                    </div>
                    <div className="text-center">
                        <h6 className="text-[#1f7330] font-bold text-2xl">
                            OTP Authenticator
                        </h6>
                        <p className="text-gray-600 text-sm mb-4 text-center">
                            Please enter the code generated by your authenticator app.
                        </p>
                    </div>
                    <form
                        action={url.loginAction}
                        id="kc-otp-login-form"
                        onSubmit={() => setLoading(true)}
                        className="w-full max-w-md"
                        method="post"
                    >
                        <div className="flex flex-col gap-1  mb-4">
                            <Input
                                type="text"
                                id="otp"
                                name="otp"
                                placeholder="One-time code"
                                className="w-full max-w-md p-5"
                                autoComplete="off"
                            />
                            {messagesPerField.existsError("totp") && (
                                <span className="text-red-600 text-sm">
                                    {messagesPerField.get("totp")}
                                </span>
                            )}
                        </div>
                        <Button
                            type="submit"
                            name="login"
                            id="kc-login"
                            disabled={loading}
                            className="w-full max-w-md bg-[#1f7330] text-white hover:bg-[#155a24] transition-colors duration-200"
                        >
                            Sign In
                            {loading && <span className="loader"></span>}
                        </Button>
                    </form>
                </div>
            </div>
        </Template>
    );
};

export default OtpFormPage;
