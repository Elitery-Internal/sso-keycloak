// This file is auto-generated by the `update-kc-gen` command. Do not edit it manually.
// Hash: 2fc07b3457f6dacfd9b8a9c9ad71086d5d598d007457ba4bff90a660d7b4e619

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

import { lazy, Suspense, type ReactNode } from "react";

export type ThemeName = "keycloakify-starter";

export const themeNames: ThemeName[] = ["keycloakify-starter"];

export type KcEnvName = "MY_APP_API_URL" | "MY_APP_PALETTE";

export const kcEnvNames: KcEnvName[] = ["MY_APP_API_URL", "MY_APP_PALETTE"];

export const kcEnvDefaults: Record<KcEnvName, string> = {
    MY_APP_API_URL: "",
    MY_APP_PALETTE: "dracula"
};
import "./app.css";
/**
 * NOTE: Do not import this type except maybe in your entrypoint.
 * If you need to import the KcContext import it either from src/login/KcContext.ts or src/account/KcContext.ts.
 * Depending on the theme type you are working on.
 */
export type KcContext = import("./login/KcContext").KcContext;

declare global {
    interface Window {
        kcContext?: KcContext;
    }
}

export const KcLoginPage = lazy(() => import("./login/KcPage"));

export function KcPage(props: { kcContext: KcContext; fallback?: ReactNode }) {
    const { kcContext, fallback } = props;
    return (
        <Suspense fallback={fallback}>
            {(() => {
                switch (kcContext.themeType) {
                    case "login":
                        return <KcLoginPage kcContext={kcContext} />;
                }
            })()}
        </Suspense>
    );
}

// NOTE: This is exported here only because in Webpack environnement it works differently
export const BASE_URL = import.meta.env.BASE_URL;

// NOTE: This is only exported here because you're supposed to import type from different packages
// Depending of if you are using Vite, Webpack, ect...
export type { Meta, StoryObj } from "@storybook/react-vite";
